$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: $color-white;

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    /* setting box-sizing property on each element on the entire page to inherit */
    box-sizing: inherit;
}

html {
    /* (10/16=0.625  10 pixels what we want, and 16 pixels is browser default size */
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    /* box-sizing this will be inherited to all elements */
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.8),
            rgba($color-primary-dark, 0.8)
        ),
        url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    /* removes the shaking effect */
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    80% {
        transform: translateX(10rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    80% {
        transform: translateX(-1rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* pseudo classes are special states of a selector. Pseudo classed are used to style elements under special conditions */
/* there are link, visited states */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* *all properties are enabled to be animated */
    /* transition property has to be in initial state */
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem;
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn:hover {
    transform: translateY(-3px);
    /* 1st value x direction, 2nd value y (apsolon) direction, 3rd value blur */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/* -1px from initial "link" state, not hover state */
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s;
}

.btn--white::after {
    background-color: $color-white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* animation-fill-mode with backwards applies opacity: 0; transform: translateY(30px); before animation starts so button is not visible initially */
    animation-fill-mode: backwards;
}
